/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenges.utilities;

import org.junit.Test;
import static org.junit.Assert.*;

public class AnimalShelterTest {
    @Test public void testCanInstantiate() {
        AnimalShelter shelter = new AnimalShelter();
        assertNotNull(shelter);
    }

    @Test public void testCanEnqueueCatsAndDogs() {
        AnimalShelter shelter = new AnimalShelter();
        Dog dog1 = new Dog("Dog1");
        Dog dog2 = new Dog("Dog2");
        Dog cat1 = new Dog("Cat1");
        Dog cat2 = new Dog("Cat2");
        shelter.enqueue(dog1);
        shelter.enqueue(cat1);
        shelter.enqueue(dog2);
        shelter.enqueue(cat2);
        assertNotNull(shelter);
    }

    @Test public void testCanDequeueDog() {
        AnimalShelter shelter = new AnimalShelter();
        Dog dog1 = new Dog("Dog1");
        Dog dog2 = new Dog("Dog2");
        Cat cat1 = new Cat("Cat1");
        Cat cat2 = new Cat("Cat2");
        shelter.enqueue(dog1);
        shelter.enqueue(cat1);
        shelter.enqueue(dog2);
        shelter.enqueue(cat2);
        assertEquals("Dog1", shelter.dequeue("dog").getName());
    }

    @Test public void testCanDequeueCat() {
        AnimalShelter shelter = new AnimalShelter();
        Dog dog1 = new Dog("Dog1");
        Dog dog2 = new Dog("Dog2");
        Cat cat1 = new Cat("Cat1");
        Cat cat2 = new Cat("Cat2");
        shelter.enqueue(dog1);
        shelter.enqueue(cat1);
        shelter.enqueue(dog2);
        shelter.enqueue(cat2);
        assertEquals("Cat1", shelter.dequeue("cat").getName());
    }

    @Test public void testCanOnlyDequeueCatOrDog() {
        AnimalShelter shelter = new AnimalShelter();
        Dog dog1 = new Dog("Dog1");
        Dog dog2 = new Dog("Dog2");
        Dog cat1 = new Dog("Cat1");
        Dog cat2 = new Dog("Cat2");
        shelter.enqueue(dog1);
        shelter.enqueue(cat1);
        shelter.enqueue(dog2);
        shelter.enqueue(cat2);
        assertNull(shelter.dequeue("bird"));
    }
}
